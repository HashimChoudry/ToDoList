{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport mainStyle from \"../../stylesheets/main_style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MainScreen = function MainScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    task = _useState2[0],\n    setTask = _useState2[1];\n  var taskArr = [];\n  return _jsxs(View, {\n    style: mainStyle.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Task\",\n      placeholderTextColor: 'grey',\n      value: task,\n      onChangeText: setTask\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonContainer,\n      onPress: function onPress() {\n        console.warn(task);\n      },\n      children: _jsx(Text, {\n        children: \"Add Task\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 42,\n    marginTop: 20,\n    borderRadius: 4,\n    backgroundColor: 'grey'\n  },\n  input: {\n    fontSize: 15,\n    borderRadius: 50,\n    borderWidth: StyleSheet.hairlineWidth,\n    padding: 10,\n    marginTop: 10,\n    height: 10,\n    borderColor: 'lightgray',\n    backgroundColor: 'white'\n  }\n});\nexport default MainScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","mainStyle","jsx","_jsx","jsxs","_jsxs","MainScreen","_useState","_useState2","_slicedToArray","task","setTask","taskArr","style","container","children","styles","input","placeholder","placeholderTextColor","value","onChangeText","buttonContainer","onPress","console","warn","create","alignItems","justifyContent","paddingVertical","paddingHorizontal","marginTop","borderRadius","backgroundColor","fontSize","borderWidth","hairlineWidth","padding","height","borderColor"],"sources":["/Users/admin/Documents/Mobile Apps/ToDoList/src/screens/Main.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from \"react-native\";\nimport mainStyle from \"../../stylesheets/main_style\";\n\nconst MainScreen= () => {\n    const [task,setTask] = useState(\"\");\n    const taskArr = []\n\n    \n\n    return(\n        <View style={mainStyle.container}>\n            <TextInput\n            style={styles.input}\n            placeholder=\"Task\"\n            placeholderTextColor={'grey'}\n            value={task}\n            onChangeText={setTask}\n            />\n            <TouchableOpacity style={styles.buttonContainer} onPress={()=>{console.warn(task)}}>\n                <Text>Add Task</Text>\n            </TouchableOpacity>\n        </View>\n    );\n    \n};\n\nconst styles = StyleSheet.create({\n    \n    buttonContainer:{\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingVertical: 12,\n        paddingHorizontal: 42,\n        marginTop: 20,\n        borderRadius: 4,\n        backgroundColor: 'grey',\n    },\n    input:{\n        fontSize: 15,\n        borderRadius: 50,\n        borderWidth: StyleSheet.hairlineWidth,\n        padding: 10,\n        marginTop: 10,\n        height: 10,\n        borderColor: 'lightgray',\n        backgroundColor: 'white',  \n        \n    },\n});\n\nexport default MainScreen"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAExC,OAAOC,SAAS;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErD,IAAMC,UAAU,GAAE,SAAZA,UAAUA,CAAA,EAAQ;EACpB,IAAAC,SAAA,GAAuBZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5BG,IAAI,GAAAF,UAAA;IAACG,OAAO,GAAAH,UAAA;EACnB,IAAMI,OAAO,GAAG,EAAE;EAIlB,OACIP,KAAA,CAACT,IAAI;IAACiB,KAAK,EAAEZ,SAAS,CAACa,SAAU;IAAAC,QAAA,GAC7BZ,IAAA,CAACL,SAAS;MACVe,KAAK,EAAEG,MAAM,CAACC,KAAM;MACpBC,WAAW,EAAC,MAAM;MAClBC,oBAAoB,EAAE,MAAO;MAC7BC,KAAK,EAAEV,IAAK;MACZW,YAAY,EAAEV;IAAQ,CACrB,CAAC,EACFR,IAAA,CAACJ,gBAAgB;MAACc,KAAK,EAAEG,MAAM,CAACM,eAAgB;MAACC,OAAO,EAAE,SAAAA,QAAA,EAAI;QAACC,OAAO,CAACC,IAAI,CAACf,IAAI,CAAC;MAAA,CAAE;MAAAK,QAAA,EAC/EZ,IAAA,CAACN,IAAI;QAAAkB,QAAA,EAAC;MAAQ,CAAM;IAAC,CACP,CAAC;EAAA,CACjB,CAAC;AAGf,CAAC;AAED,IAAMC,MAAM,GAAGhB,UAAU,CAAC0B,MAAM,CAAC;EAE7BJ,eAAe,EAAC;IACZK,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,CAAC;IACfC,eAAe,EAAE;EACrB,CAAC;EACDhB,KAAK,EAAC;IACFiB,QAAQ,EAAE,EAAE;IACZF,YAAY,EAAE,EAAE;IAChBG,WAAW,EAAEnC,UAAU,CAACoC,aAAa;IACrCC,OAAO,EAAE,EAAE;IACXN,SAAS,EAAE,EAAE;IACbO,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,WAAW;IACxBN,eAAe,EAAE;EAErB;AACJ,CAAC,CAAC;AAEF,eAAe3B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}